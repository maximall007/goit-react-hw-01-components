{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.js","index.js"],"names":["module","exports","Profile","user","className","s","bg","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","defaultProps","randomBgColor","x","Math","floor","random","y","z","Statistics","title","statistics","statList","length","map","el","key","id","item","style","backgroundColor","percentage","FriendListItem","friend","isOnline","onLine","offLine","width","FriendList","friends","friend__list","TransactionHistory","items","thead_tr","type","tbody","tbody_tr","type_td","amount_td","amount","currency_td","currency","App","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.59fef4e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Profile_bg__1UsZN\",\"profile\":\"Profile_profile__2sqCp\",\"description\":\"Profile_description__1NSKn\",\"avatar\":\"Profile_avatar__2Eef1\",\"name\":\"Profile_name__Yn_QF\",\"tag\":\"Profile_tag__1dwEj\",\"location\":\"Profile_location__2prif\",\"label\":\"Profile_label__1BYjA\",\"stats\":\"Profile_stats__1kR5V\",\"quantity\":\"Profile_quantity__VSb_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"TransactionHistory_bg__qrdG2\",\"transaction-history\":\"TransactionHistory_transaction-history__3wCjZ\",\"thead_tr\":\"TransactionHistory_thead_tr__3ThtT\",\"type_td\":\"TransactionHistory_type_td__1DA6i\",\"tbody_tr\":\"TransactionHistory_tbody_tr__3z7PZ\",\"tbody\":\"TransactionHistory_tbody__6CuqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"FriendList_bg__26SOZ\",\"friend__list\":\"FriendList_friend__list__2wW6i\",\"item\":\"FriendList_item__1Bo4y\",\"onLine\":\"FriendList_onLine__oW8TX\",\"offLine\":\"FriendList_offLine__3KVTq\",\"avatar\":\"FriendList_avatar__VuDkB\",\"name\":\"FriendList_name__ffP0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Statistics_bg__3flUe\",\"statistics\":\"Statistics_statistics__2v9wn\",\"title\":\"Statistics_title__1DQ2j\",\"statList\":\"Statistics_statList__2TSaQ\",\"item\":\"Statistics_item__3xAYs\",\"label\":\"Statistics_label__2bDvi\",\"percentage\":\"Statistics_percentage__3tjQx\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ user }) => (\r\n  <div className={s.bg}>\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={user.avatar} alt=\"user avatar\" className={s.avatar} />\r\n        <p className={s.name}>{user.name}</p>\r\n        <p className={s.tag}>@{user.tag}</p>\r\n        <p className={s.location}>{user.location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{user.stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{user.stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{user.stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  user: {},\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number,\r\n      views: PropTypes.number,\r\n      likes: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Statistics.module.css';\r\n\r\nfunction randomBgColor() {\r\n  const x = Math.floor(Math.random() * 256);\r\n  const y = Math.floor(Math.random() * 256);\r\n  const z = Math.floor(Math.random() * 256);\r\n  const bgColor = `rgb(${x}, ${y}, ${z})`;\r\n\r\n  return bgColor;\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <div className={s.bg}>\r\n    <section className={s.statistics}>\r\n      <h2 className={s.title}>{title}</h2>\r\n\r\n      <ul className={s.statList}>\r\n        {stats.length > 0 &&\r\n          stats.map(el => (\r\n            <li\r\n              key={el.id}\r\n              className={s.item}\r\n              style={{ backgroundColor: `${randomBgColor()}` }}\r\n            >\r\n              <span className={s.label}>{el.label}</span>\r\n              <span className={s.percentage}>{el.percentage}%</span>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </section>\r\n  </div>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n  stats: [],\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ friend, alt }) => (\r\n  <li className={s.item}>\r\n    <span className={friend.isOnline === true ? s.onLine : s.offLine} />\r\n    <img className={s.avatar} src={friend.avatar} alt={alt} width=\"80\" />\r\n    <p className={s.name}>{friend.name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.defaultProps = {\r\n  friend: {},\r\n  alt: 'avatar',\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friend: PropTypes.shape({\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n    id: PropTypes.number,\r\n  }),\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <div className={s.bg}>\r\n    <ul className={s.friend__list}>\r\n      {friends.length > 0 &&\r\n        friends.map(el => <FriendListItem key={el.id} friend={el} />)}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <div className={s.bg}>\r\n    <table className={s['transaction-history']}>\r\n      <thead>\r\n        <tr className={s.thead_tr}>\r\n          <th className={s.type}>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className={s.tbody}>\r\n        {items.length > 0 &&\r\n          items.map(el => (\r\n            <tr key={el.id} className={s.tbody_tr}>\r\n              <td className={s.type_td}>{el.type}</td>\r\n              <td className={s.amount_td}>{el.amount}</td>\r\n              <td className={s.currency_td}>{el.currency}</td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nTransactionHistory.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile.jsx';\r\nimport Statistics from './Statistics/Statistics.jsx';\r\nimport FriendList from './FriendList/FriendList.jsx';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory.jsx';\r\n\r\nimport user from './Profile/user.json';\r\nimport statisticalData from './Statistics/statistical-data.json';\r\nimport friends from './FriendList/friends.json';\r\nimport transactions from './TransactionHistory/transactions.json';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Profile user={user} />\r\n    <Statistics title=\"File upload\" stats={statisticalData} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </div>\r\n);\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}